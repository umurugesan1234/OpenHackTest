name: .NET Core-Build and Test
env:
  registry: openhack8690uru7acr.azurecr.io
  registryurl: https://openhack8690uru7acr.azurecr.io/
  staging_url: https://openhack8690uru7poi-staging.azurewebsites.net/api/healthcheck/poi
  prod_url: https://openhack8690uru7poi.azurewebsites.net/api/healthcheck/poi
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  webapp_name: openhack8690uru7poi
  build_name: POI
  resource_group: openhack8690uru7rg

on:
  push:
    branches: [ master ]
    paths: [apis/poi/**,.github/workflows/prod-build-dotnetcore.yml]
  pull_request:
    branches: [ master ]
    paths: [apis/poi/**,.github/workflows/prod-build-dotnetcore.yml]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.301
    - name: Install dependencies
      run: dotnet restore ./apis/poi/poi.sln
    - name: Build
      run: dotnet build ./apis/poi/poi.sln --configuration Release --no-restore
    - name: Create issue on build failure
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.4.0
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Test
      run: dotnet test ./apis/poi/tests/UnitTests/UnitTests.csproj --no-restore --verbosity normal
 
  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build
    steps:     
    - uses: actions/checkout@v2
      
    - name: Azure Container Registry Login
      run: docker login $registry -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_KEY }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
          
  deploy_staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
        
    - name: Azure CLI Start Staging Slot
      uses: Azure/cli@1.0.4
      with:
       inlineScript: az webapp start --name $webapp_name --resource-group $resource_group --slot staging
      
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }}
        slot-name: staging  
        images: ${{ env.registry }}/${{ env.repository }}:${{github.run_number}}

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
          
  validate_staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy_staging
    steps:
    - uses: actions/checkout@v2

    - name: URL Health Check
      # You may pin to the exact commit or the version.
      # uses: Jtalk/url-health-check-action@2ff10af730f912a7b51f4e3868d9cb30de170a6b
      uses: Jtalk/url-health-check-action@v1.3
      with:
        # Target URL(s), split by |
       url: $staging_url
       
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          }); 
  
  swap_slots:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: validate_staging
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    - name: Swap staging to production
      run: |
        az webapp deployment slot swap --name $webapp_name --resource-group $resource_group --slot staging --target-slot production
   
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
          
  
  validate_production:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: swap_slots
    steps:
    - uses: actions/checkout@v2

    - name: URL Health Check
      # You may pin to the exact commit or the version.
      # uses: Jtalk/url-health-check-action@2ff10af730f912a7b51f4e3868d9cb30de170a6b
      uses: Jtalk/url-health-check-action@v1.3
      with:
        # Target URL(s), split by |
       url: $prod_url
   
    - name: Rollback -Swap production and staging
      if: failure()
      run: |
        az webapp deployment slot swap --name $webapp_name --resource-group $resource_group --slot staging --target-slot production 
        
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
          
  stop_staging:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: validate_production
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
        
    - name: Azure CLI Start Staging Slot
      uses: Azure/cli@1.0.4
      with:
       inlineScript: az webapp stop --name $webapp_name --resource-group $resource_group --slot staging
          
     
